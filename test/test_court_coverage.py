# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.court_coverage import CourtCoverage

class TestCourtCoverage(unittest.TestCase):
    """CourtCoverage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CourtCoverage:
        """Test CourtCoverage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CourtCoverage`
        """
        model = CourtCoverage()
        if include_optional:
            return CourtCoverage(
                object = 'CourtCoverage',
                last_update_count_date = '0123456789101112131415161718192021222324',
                court = unicourt.models.court.Court(
                    object = 'Court', 
                    court_id = '01234567891011121314151617', 
                    court_type_id = '01234567891011121314151617', 
                    court_system_id = '01234567891011121314151617', 
                    type = '0', 
                    system = '0', 
                    name = '0', 
                    name_aka = '0', 
                    additional_levels = unicourt.models.additional_levels.AdditionalLevels(
                        object = 'AdditionalLevels', 
                        level1 = '0', 
                        level2 = '0', 
                        level3 = '0', 
                        level4 = '0', ), 
                    container_type = '0', 
                    container = '0', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    jurisdiction_geo_for_court_api = '0', 
                    court_locations_for_court_api = '0', 
                    appeal_courts_for_court_api = '0', 
                    court_service_status_api = '0', ),
                total_case_count = 56,
                total_cases_in_last_thirty_days_count = 56,
                total_free_case_document_count = 56,
                total_free_case_documents_in_last_thirty_days_count = 56,
                total_paid_case_document_count = 56,
                total_paid_case_documents_in_last_thirty_days_count = 56,
                total_case_document_in_library_count = 56,
                total_case_document_in_library_in_last_thirty_days_count = 56,
                case_class_coverage_array = [
                    unicourt.models.case_class_coverage.CaseClassCoverage(
                        object = 'CaseClassCoverage', 
                        case_class = unicourt.models.case_class.CaseClass(
                            object = 'CaseClass', 
                            case_class_id = '01234567891011121314151617', 
                            name = '0', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        court_service_status_api = '012345678910111213141516171819202122232425262728293031323334353637383940414243444546474849', 
                        case_count = 56, 
                        cases_in_last_thirty_days_count = 56, 
                        free_case_document_count = 56, 
                        free_case_documents_in_last_thirty_days_count = 56, 
                        paid_case_document_count = 56, 
                        paid_case_documents_in_last_thirty_days_count = 56, 
                        case_document_in_library_count = 56, 
                        case_document_in_library_in_last_thirty_days_count = 56, )
                    ]
            )
        else:
            return CourtCoverage(
                object = 'CourtCoverage',
                last_update_count_date = '0123456789101112131415161718192021222324',
                court = unicourt.models.court.Court(
                    object = 'Court', 
                    court_id = '01234567891011121314151617', 
                    court_type_id = '01234567891011121314151617', 
                    court_system_id = '01234567891011121314151617', 
                    type = '0', 
                    system = '0', 
                    name = '0', 
                    name_aka = '0', 
                    additional_levels = unicourt.models.additional_levels.AdditionalLevels(
                        object = 'AdditionalLevels', 
                        level1 = '0', 
                        level2 = '0', 
                        level3 = '0', 
                        level4 = '0', ), 
                    container_type = '0', 
                    container = '0', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    jurisdiction_geo_for_court_api = '0', 
                    court_locations_for_court_api = '0', 
                    appeal_courts_for_court_api = '0', 
                    court_service_status_api = '0', ),
                total_case_count = 56,
                total_cases_in_last_thirty_days_count = 56,
                total_free_case_document_count = 56,
                total_free_case_documents_in_last_thirty_days_count = 56,
                total_paid_case_document_count = 56,
                total_paid_case_documents_in_last_thirty_days_count = 56,
                total_case_document_in_library_count = 56,
                total_case_document_in_library_in_last_thirty_days_count = 56,
                case_class_coverage_array = [
                    unicourt.models.case_class_coverage.CaseClassCoverage(
                        object = 'CaseClassCoverage', 
                        case_class = unicourt.models.case_class.CaseClass(
                            object = 'CaseClass', 
                            case_class_id = '01234567891011121314151617', 
                            name = '0', 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        court_service_status_api = '012345678910111213141516171819202122232425262728293031323334353637383940414243444546474849', 
                        case_count = 56, 
                        cases_in_last_thirty_days_count = 56, 
                        free_case_document_count = 56, 
                        free_case_documents_in_last_thirty_days_count = 56, 
                        paid_case_document_count = 56, 
                        paid_case_documents_in_last_thirty_days_count = 56, 
                        case_document_in_library_count = 56, 
                        case_document_in_library_in_last_thirty_days_count = 56, )
                    ],
        )
        """

    def testCourtCoverage(self):
        """Test CourtCoverage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
