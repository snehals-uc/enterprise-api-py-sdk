# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.case_count_analytics_by_court import CaseCountAnalyticsByCourt

class TestCaseCountAnalyticsByCourt(unittest.TestCase):
    """CaseCountAnalyticsByCourt unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CaseCountAnalyticsByCourt:
        """Test CaseCountAnalyticsByCourt
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CaseCountAnalyticsByCourt`
        """
        model = CaseCountAnalyticsByCourt()
        if include_optional:
            return CaseCountAnalyticsByCourt(
                object = 'CaseCountAnalyticsByCourt',
                case_count = 56,
                case_search_api = '',
                court = unicourt.models.court.Court(
                    object = 'Court', 
                    court_id = '01234567891011121314151617', 
                    court_type_id = '01234567891011121314151617', 
                    court_system_id = '01234567891011121314151617', 
                    type = '0', 
                    system = '0', 
                    name = '0', 
                    name_aka = '0', 
                    additional_levels = unicourt.models.additional_levels.AdditionalLevels(
                        object = 'AdditionalLevels', 
                        level1 = '0', 
                        level2 = '0', 
                        level3 = '0', 
                        level4 = '0', ), 
                    container_type = '0', 
                    container = '0', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    jurisdiction_geo_for_court_api = '0', 
                    court_locations_for_court_api = '0', 
                    appeal_courts_for_court_api = '0', 
                    court_service_status_api = '0', ),
                geo = unicourt.models.case_count_analytics_by_court_geo.CaseCountAnalyticsByCourt_Geo(
                    latitude = '', 
                    longitude = '', )
            )
        else:
            return CaseCountAnalyticsByCourt(
                object = 'CaseCountAnalyticsByCourt',
                case_count = 56,
                case_search_api = '',
                court = unicourt.models.court.Court(
                    object = 'Court', 
                    court_id = '01234567891011121314151617', 
                    court_type_id = '01234567891011121314151617', 
                    court_system_id = '01234567891011121314151617', 
                    type = '0', 
                    system = '0', 
                    name = '0', 
                    name_aka = '0', 
                    additional_levels = unicourt.models.additional_levels.AdditionalLevels(
                        object = 'AdditionalLevels', 
                        level1 = '0', 
                        level2 = '0', 
                        level3 = '0', 
                        level4 = '0', ), 
                    container_type = '0', 
                    container = '0', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    jurisdiction_geo_for_court_api = '0', 
                    court_locations_for_court_api = '0', 
                    appeal_courts_for_court_api = '0', 
                    court_service_status_api = '0', ),
                geo = unicourt.models.case_count_analytics_by_court_geo.CaseCountAnalyticsByCourt_Geo(
                    latitude = '', 
                    longitude = '', ),
        )
        """

    def testCaseCountAnalyticsByCourt(self):
        """Test CaseCountAnalyticsByCourt"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
