# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.possible_norm_judge import PossibleNormJudge

class TestPossibleNormJudge(unittest.TestCase):
    """PossibleNormJudge unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PossibleNormJudge:
        """Test PossibleNormJudge
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PossibleNormJudge`
        """
        model = PossibleNormJudge()
        if include_optional:
            return PossibleNormJudge(
                object = 'PossibleNormJudge',
                norm_judge_id = '01234567891011121314151617',
                norm_judge_name = '',
                best_match = True,
                confidence_score = 1.337,
                score_constituents = unicourt.models.possible_norm_judge_score_constituents.PossibleNormJudge_scoreConstituents(
                    name_similarity_score = 1.337, 
                    other_potential_norm_judges = 56, 
                    address = 'Matched', 
                    email = 'Matched', 
                    phone = 'Matched', ),
                norm_judge_api = '',
                associated_norm_attorneys_api = '',
                associated_norm_law_firms_api = '',
                associated_norm_parties_api = '',
                case_count_analytics_by_norm_judge_api = ''
            )
        else:
            return PossibleNormJudge(
                object = 'PossibleNormJudge',
                norm_judge_id = '01234567891011121314151617',
                norm_judge_name = '',
                best_match = True,
                confidence_score = 1.337,
                score_constituents = unicourt.models.possible_norm_judge_score_constituents.PossibleNormJudge_scoreConstituents(
                    name_similarity_score = 1.337, 
                    other_potential_norm_judges = 56, 
                    address = 'Matched', 
                    email = 'Matched', 
                    phone = 'Matched', ),
                norm_judge_api = '',
                associated_norm_attorneys_api = '',
                associated_norm_law_firms_api = '',
                associated_norm_parties_api = '',
                case_count_analytics_by_norm_judge_api = '',
        )
        """

    def testPossibleNormJudge(self):
        """Test PossibleNormJudge"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
