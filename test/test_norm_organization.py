# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.norm_organization import NormOrganization

class TestNormOrganization(unittest.TestCase):
    """NormOrganization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NormOrganization:
        """Test NormOrganization
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NormOrganization`
        """
        model = NormOrganization()
        if include_optional:
            return NormOrganization(
                object = 'NormOrganization',
                norm_organization_id = '01234567891011121314151617',
                name = '',
                organization_type = 'Business',
                lei = '',
                cik = '',
                ticker_array = [
                    unicourt.models.norm_organization_ticker_array_inner.NormOrganization_tickerArray_inner(
                        exchange = '', 
                        symbols = [
                            ''
                            ], )
                    ],
                naics = '',
                naics_description = '',
                sic = '',
                sic_description = '',
                is_involved_in_litigation = True,
                norm_party_api = '',
                norm_corporate_group_array = [
                    unicourt.models.norm_corporate_group.NormCorporateGroup(
                        object = 'NormCorporateGroup', 
                        norm_corporate_group_id = '01234567891011121314151617', 
                        norm_corporate_group_name = '', )
                    ],
                sos_data_array = [
                    unicourt.models.sos_data.SOSData(
                        object = 'SOSData', 
                        sos_number = '', 
                        state_code = '', 
                        fein = '', 
                        domestic_registration = True, 
                        registered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'Active', 
                        is_active = True, 
                        inactivation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        associated_so_s_person_array = [
                            unicourt.models.associated_so_s_person.AssociatedSoSPerson(
                                object = 'AssociatedSoSPerson', 
                                contact = unicourt.models.contact.Contact(
                                    object = 'Contact', 
                                    address_array = [
                                        unicourt.models.address.Address(
                                            object = 'Address', 
                                            street_address1 = '0', 
                                            street_address2 = '0', 
                                            city = '0', 
                                            state_name = 'UNKNOWN', 
                                            state_code = '01', 
                                            country_name = 'UNKNOWN', 
                                            country_code = '01', 
                                            zip = '0', 
                                            zip4 = '0123', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            latitude = -90, 
                                            longitude = -180, )
                                        ], 
                                    phone_number_array = [
                                        unicourt.models.phone.Phone(
                                            object = 'Phone', 
                                            phone_number = '0', 
                                            phone_type = 'DEFAULT', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    email_array = [
                                        unicourt.models.email.Email(
                                            object = 'Email', 
                                            email_id = '0', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], ), 
                                entity_name = '', 
                                entity_type = 'Partner', )
                            ], 
                        contact = unicourt.models.contact.Contact(
                            object = 'Contact', 
                            address_array = [
                                unicourt.models.address.Address(
                                    object = 'Address', 
                                    street_address1 = '0', 
                                    street_address2 = '0', 
                                    city = '0', 
                                    state_name = 'UNKNOWN', 
                                    state_code = '01', 
                                    country_name = 'UNKNOWN', 
                                    country_code = '01', 
                                    zip = '0', 
                                    zip4 = '0123', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    latitude = -90, 
                                    longitude = -180, )
                                ], 
                            phone_number_array = [
                                unicourt.models.phone.Phone(
                                    object = 'Phone', 
                                    phone_number = '0', 
                                    phone_type = 'DEFAULT', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            email_array = [
                                unicourt.models.email.Email(
                                    object = 'Email', 
                                    email_id = '0', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], ), 
                        name_changes_array = [
                            unicourt.models.sos_name_change.SOSNameChange(
                                object = 'SOSNameChange', 
                                name = '', 
                                from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        sos_associated_norm_organization_array = [
                            unicourt.models.sos_associated_norm_organization.SOSAssociatedNormOrganization(
                                object = 'SOSAssociatedNormOrganization', 
                                norm_organization_id = '01234567891011121314151617', 
                                norm_organization_api = '', 
                                relationship_type = 'Parent', 
                                name = '', 
                                from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_fetch_date_with_updates = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return NormOrganization(
                object = 'NormOrganization',
                norm_organization_id = '01234567891011121314151617',
                name = '',
                organization_type = 'Business',
                lei = '',
                cik = '',
                ticker_array = [
                    unicourt.models.norm_organization_ticker_array_inner.NormOrganization_tickerArray_inner(
                        exchange = '', 
                        symbols = [
                            ''
                            ], )
                    ],
                naics = '',
                naics_description = '',
                sic = '',
                sic_description = '',
                is_involved_in_litigation = True,
                norm_party_api = '',
                norm_corporate_group_array = [
                    unicourt.models.norm_corporate_group.NormCorporateGroup(
                        object = 'NormCorporateGroup', 
                        norm_corporate_group_id = '01234567891011121314151617', 
                        norm_corporate_group_name = '', )
                    ],
                sos_data_array = [
                    unicourt.models.sos_data.SOSData(
                        object = 'SOSData', 
                        sos_number = '', 
                        state_code = '', 
                        fein = '', 
                        domestic_registration = True, 
                        registered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'Active', 
                        is_active = True, 
                        inactivation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        associated_so_s_person_array = [
                            unicourt.models.associated_so_s_person.AssociatedSoSPerson(
                                object = 'AssociatedSoSPerson', 
                                contact = unicourt.models.contact.Contact(
                                    object = 'Contact', 
                                    address_array = [
                                        unicourt.models.address.Address(
                                            object = 'Address', 
                                            street_address1 = '0', 
                                            street_address2 = '0', 
                                            city = '0', 
                                            state_name = 'UNKNOWN', 
                                            state_code = '01', 
                                            country_name = 'UNKNOWN', 
                                            country_code = '01', 
                                            zip = '0', 
                                            zip4 = '0123', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            latitude = -90, 
                                            longitude = -180, )
                                        ], 
                                    phone_number_array = [
                                        unicourt.models.phone.Phone(
                                            object = 'Phone', 
                                            phone_number = '0', 
                                            phone_type = 'DEFAULT', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], 
                                    email_array = [
                                        unicourt.models.email.Email(
                                            object = 'Email', 
                                            email_id = '0', 
                                            is_visible = True, 
                                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                        ], ), 
                                entity_name = '', 
                                entity_type = 'Partner', )
                            ], 
                        contact = unicourt.models.contact.Contact(
                            object = 'Contact', 
                            address_array = [
                                unicourt.models.address.Address(
                                    object = 'Address', 
                                    street_address1 = '0', 
                                    street_address2 = '0', 
                                    city = '0', 
                                    state_name = 'UNKNOWN', 
                                    state_code = '01', 
                                    country_name = 'UNKNOWN', 
                                    country_code = '01', 
                                    zip = '0', 
                                    zip4 = '0123', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    latitude = -90, 
                                    longitude = -180, )
                                ], 
                            phone_number_array = [
                                unicourt.models.phone.Phone(
                                    object = 'Phone', 
                                    phone_number = '0', 
                                    phone_type = 'DEFAULT', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            email_array = [
                                unicourt.models.email.Email(
                                    object = 'Email', 
                                    email_id = '0', 
                                    is_visible = True, 
                                    first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], ), 
                        name_changes_array = [
                            unicourt.models.sos_name_change.SOSNameChange(
                                object = 'SOSNameChange', 
                                name = '', 
                                from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        sos_associated_norm_organization_array = [
                            unicourt.models.sos_associated_norm_organization.SOSAssociatedNormOrganization(
                                object = 'SOSAssociatedNormOrganization', 
                                norm_organization_id = '01234567891011121314151617', 
                                norm_organization_api = '', 
                                relationship_type = 'Parent', 
                                name = '', 
                                from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_fetch_date_with_updates = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testNormOrganization(self):
        """Test NormOrganization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
