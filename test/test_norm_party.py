# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.norm_party import NormParty

class TestNormParty(unittest.TestCase):
    """NormParty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NormParty:
        """Test NormParty
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NormParty`
        """
        model = NormParty()
        if include_optional:
            return NormParty(
                object = 'NormParty',
                norm_party_id = '01234567891011121314151617',
                name = '',
                party_classification_type = 'Individual',
                case_search_api = '',
                case_analytics_api = unicourt.models.case_analytics_api.CaseAnalyticsAPI(
                    object = 'CaseAnalyticsAPI', 
                    case_count_analytics_by_court_api = '', 
                    case_count_analytics_by_court_type_api = '', 
                    case_count_analytics_by_court_system_api = '', 
                    case_count_analytics_by_court_location_api = '', 
                    case_count_analytics_by_jurisdiction_geo_api = '', 
                    case_count_analytics_by_area_of_law_api = '', 
                    case_count_analytics_by_case_class_api = '', 
                    case_count_analytics_by_case_type_api = '', 
                    case_count_analytics_by_case_type_group_api = '', 
                    case_count_analytics_by_party_role_api = '', 
                    case_count_analytics_by_party_role_group_api = '', 
                    total_cases = 56, ),
                individual_data = unicourt.models.individual.Individual(
                    name = '', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', ),
                norm_organization_data = unicourt.models.norm_organization.NormOrganization(
                    object = 'NormOrganization', 
                    norm_organization_id = '01234567891011121314151617', 
                    name = '', 
                    organization_type = 'Business', 
                    lei = '', 
                    cik = '', 
                    ticker_array = [
                        unicourt.models.norm_organization_ticker_array_inner.NormOrganization_tickerArray_inner(
                            exchange = '', 
                            symbols = [
                                ''
                                ], )
                        ], 
                    naics = '', 
                    naics_description = '', 
                    sic = '', 
                    sic_description = '', 
                    is_involved_in_litigation = True, 
                    norm_party_api = '', 
                    norm_corporate_group_array = [
                        unicourt.models.norm_corporate_group.NormCorporateGroup(
                            object = 'NormCorporateGroup', 
                            norm_corporate_group_id = '01234567891011121314151617', 
                            norm_corporate_group_name = '', )
                        ], 
                    sos_data_array = [
                        unicourt.models.sos_data.SOSData(
                            object = 'SOSData', 
                            sos_number = '', 
                            state_code = '', 
                            fein = '', 
                            domestic_registration = True, 
                            registered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            status = 'Active', 
                            is_active = True, 
                            inactivation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            associated_so_s_person_array = [
                                unicourt.models.associated_so_s_person.AssociatedSoSPerson(
                                    object = 'AssociatedSoSPerson', 
                                    contact = unicourt.models.contact.Contact(
                                        object = 'Contact', 
                                        address_array = [
                                            unicourt.models.address.Address(
                                                object = 'Address', 
                                                street_address1 = '0', 
                                                street_address2 = '0', 
                                                city = '0', 
                                                state_name = 'UNKNOWN', 
                                                state_code = '01', 
                                                country_name = 'UNKNOWN', 
                                                country_code = '01', 
                                                zip = '0', 
                                                zip4 = '0123', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                latitude = -90, 
                                                longitude = -180, )
                                            ], 
                                        phone_number_array = [
                                            unicourt.models.phone.Phone(
                                                object = 'Phone', 
                                                phone_number = '0', 
                                                phone_type = 'DEFAULT', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], 
                                        email_array = [
                                            unicourt.models.email.Email(
                                                object = 'Email', 
                                                email_id = '0', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], ), 
                                    entity_name = '', 
                                    entity_type = 'Partner', )
                                ], 
                            contact = unicourt.models.contact.Contact(
                                object = 'Contact', 
                                address_array = [
                                    unicourt.models.address.Address(
                                        object = 'Address', 
                                        street_address1 = '0', 
                                        street_address2 = '0', 
                                        city = '0', 
                                        state_name = 'UNKNOWN', 
                                        state_code = '01', 
                                        country_name = 'UNKNOWN', 
                                        country_code = '01', 
                                        zip = '0', 
                                        zip4 = '0123', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        latitude = -90, 
                                        longitude = -180, )
                                    ], 
                                phone_number_array = [
                                    unicourt.models.phone.Phone(
                                        object = 'Phone', 
                                        phone_number = '0', 
                                        phone_type = 'DEFAULT', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                email_array = [
                                    unicourt.models.email.Email(
                                        object = 'Email', 
                                        email_id = '0', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], ), 
                            name_changes_array = [
                                unicourt.models.sos_name_change.SOSNameChange(
                                    object = 'SOSNameChange', 
                                    name = '', 
                                    from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            sos_associated_norm_organization_array = [
                                unicourt.models.sos_associated_norm_organization.SOSAssociatedNormOrganization(
                                    object = 'SOSAssociatedNormOrganization', 
                                    norm_organization_id = '01234567891011121314151617', 
                                    norm_organization_api = '', 
                                    relationship_type = 'Parent', 
                                    name = '', 
                                    from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_fetch_date_with_updates = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                party_analytics_api = unicourt.models.party_analytics_api.PartyAnalyticsAPI(
                    object = 'PartyAnalyticsAPI', 
                    norm_party_api = '', 
                    associated_norm_attorneys_api = '', 
                    associated_norm_law_firms_api = '', 
                    associated_norm_judges_api = '', 
                    case_count_analytics_by_opposing_norm_attorney_api = '', 
                    case_count_analytics_by_opposing_norm_law_firm_api = '', 
                    case_count_analytics_by_opposing_norm_party_api = '', ),
                related_norm_party_array = [
                    unicourt.models.related_norm_party.RelatedNormParty(
                        object = 'RelatedNormParty', 
                        norm_party_id = '01234567891011121314151617', 
                        relationship_type = 'Parent', )
                    ]
            )
        else:
            return NormParty(
                object = 'NormParty',
                norm_party_id = '01234567891011121314151617',
                name = '',
                party_classification_type = 'Individual',
                case_search_api = '',
                case_analytics_api = unicourt.models.case_analytics_api.CaseAnalyticsAPI(
                    object = 'CaseAnalyticsAPI', 
                    case_count_analytics_by_court_api = '', 
                    case_count_analytics_by_court_type_api = '', 
                    case_count_analytics_by_court_system_api = '', 
                    case_count_analytics_by_court_location_api = '', 
                    case_count_analytics_by_jurisdiction_geo_api = '', 
                    case_count_analytics_by_area_of_law_api = '', 
                    case_count_analytics_by_case_class_api = '', 
                    case_count_analytics_by_case_type_api = '', 
                    case_count_analytics_by_case_type_group_api = '', 
                    case_count_analytics_by_party_role_api = '', 
                    case_count_analytics_by_party_role_group_api = '', 
                    total_cases = 56, ),
                individual_data = unicourt.models.individual.Individual(
                    name = '', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', ),
                norm_organization_data = unicourt.models.norm_organization.NormOrganization(
                    object = 'NormOrganization', 
                    norm_organization_id = '01234567891011121314151617', 
                    name = '', 
                    organization_type = 'Business', 
                    lei = '', 
                    cik = '', 
                    ticker_array = [
                        unicourt.models.norm_organization_ticker_array_inner.NormOrganization_tickerArray_inner(
                            exchange = '', 
                            symbols = [
                                ''
                                ], )
                        ], 
                    naics = '', 
                    naics_description = '', 
                    sic = '', 
                    sic_description = '', 
                    is_involved_in_litigation = True, 
                    norm_party_api = '', 
                    norm_corporate_group_array = [
                        unicourt.models.norm_corporate_group.NormCorporateGroup(
                            object = 'NormCorporateGroup', 
                            norm_corporate_group_id = '01234567891011121314151617', 
                            norm_corporate_group_name = '', )
                        ], 
                    sos_data_array = [
                        unicourt.models.sos_data.SOSData(
                            object = 'SOSData', 
                            sos_number = '', 
                            state_code = '', 
                            fein = '', 
                            domestic_registration = True, 
                            registered_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            status = 'Active', 
                            is_active = True, 
                            inactivation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            associated_so_s_person_array = [
                                unicourt.models.associated_so_s_person.AssociatedSoSPerson(
                                    object = 'AssociatedSoSPerson', 
                                    contact = unicourt.models.contact.Contact(
                                        object = 'Contact', 
                                        address_array = [
                                            unicourt.models.address.Address(
                                                object = 'Address', 
                                                street_address1 = '0', 
                                                street_address2 = '0', 
                                                city = '0', 
                                                state_name = 'UNKNOWN', 
                                                state_code = '01', 
                                                country_name = 'UNKNOWN', 
                                                country_code = '01', 
                                                zip = '0', 
                                                zip4 = '0123', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                latitude = -90, 
                                                longitude = -180, )
                                            ], 
                                        phone_number_array = [
                                            unicourt.models.phone.Phone(
                                                object = 'Phone', 
                                                phone_number = '0', 
                                                phone_type = 'DEFAULT', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], 
                                        email_array = [
                                            unicourt.models.email.Email(
                                                object = 'Email', 
                                                email_id = '0', 
                                                is_visible = True, 
                                                first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                            ], ), 
                                    entity_name = '', 
                                    entity_type = 'Partner', )
                                ], 
                            contact = unicourt.models.contact.Contact(
                                object = 'Contact', 
                                address_array = [
                                    unicourt.models.address.Address(
                                        object = 'Address', 
                                        street_address1 = '0', 
                                        street_address2 = '0', 
                                        city = '0', 
                                        state_name = 'UNKNOWN', 
                                        state_code = '01', 
                                        country_name = 'UNKNOWN', 
                                        country_code = '01', 
                                        zip = '0', 
                                        zip4 = '0123', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        latitude = -90, 
                                        longitude = -180, )
                                    ], 
                                phone_number_array = [
                                    unicourt.models.phone.Phone(
                                        object = 'Phone', 
                                        phone_number = '0', 
                                        phone_type = 'DEFAULT', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                email_array = [
                                    unicourt.models.email.Email(
                                        object = 'Email', 
                                        email_id = '0', 
                                        is_visible = True, 
                                        first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], ), 
                            name_changes_array = [
                                unicourt.models.sos_name_change.SOSNameChange(
                                    object = 'SOSNameChange', 
                                    name = '', 
                                    from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            sos_associated_norm_organization_array = [
                                unicourt.models.sos_associated_norm_organization.SOSAssociatedNormOrganization(
                                    object = 'SOSAssociatedNormOrganization', 
                                    norm_organization_id = '01234567891011121314151617', 
                                    norm_organization_api = '', 
                                    relationship_type = 'Parent', 
                                    name = '', 
                                    from_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    to_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            first_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_fetch_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_fetch_date_with_updates = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], ),
                party_analytics_api = unicourt.models.party_analytics_api.PartyAnalyticsAPI(
                    object = 'PartyAnalyticsAPI', 
                    norm_party_api = '', 
                    associated_norm_attorneys_api = '', 
                    associated_norm_law_firms_api = '', 
                    associated_norm_judges_api = '', 
                    case_count_analytics_by_opposing_norm_attorney_api = '', 
                    case_count_analytics_by_opposing_norm_law_firm_api = '', 
                    case_count_analytics_by_opposing_norm_party_api = '', ),
                related_norm_party_array = [
                    unicourt.models.related_norm_party.RelatedNormParty(
                        object = 'RelatedNormParty', 
                        norm_party_id = '01234567891011121314151617', 
                        relationship_type = 'Parent', )
                    ],
        )
        """

    def testNormParty(self):
        """Test NormParty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
