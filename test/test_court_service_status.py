# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.court_service_status import CourtServiceStatus

class TestCourtServiceStatus(unittest.TestCase):
    """CourtServiceStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CourtServiceStatus:
        """Test CourtServiceStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CourtServiceStatus`
        """
        model = CourtServiceStatus()
        if include_optional:
            return CourtServiceStatus(
                object = 'CourtServiceStatus',
                court_service_status_id = '01234567891011121314151617',
                court_id_array = [
                    '01234567891011121314151617'
                    ],
                court_location_id_array = [
                    '01234567891011121314151617'
                    ],
                case_class_id_array = [
                    '01234567891011121314151617'
                    ],
                service_status_as_on = '0123456789101112131415161718192021222324',
                case_update_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), ),
                case_track_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), ),
                case_document_order_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), )
            )
        else:
            return CourtServiceStatus(
                object = 'CourtServiceStatus',
                court_service_status_id = '01234567891011121314151617',
                court_id_array = [
                    '01234567891011121314151617'
                    ],
                court_location_id_array = [
                    '01234567891011121314151617'
                    ],
                case_class_id_array = [
                    '01234567891011121314151617'
                    ],
                service_status_as_on = '0123456789101112131415161718192021222324',
                case_update_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), ),
                case_track_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), ),
                case_document_order_service_status = unicourt.models.service_status.ServiceStatus(
                    object = 'ServiceStatus', 
                    service_up = True, 
                    service_details = 'acceptingCaseUpdates', 
                    service_status_down_details = unicourt.models.service_status_down_details.ServiceStatusDownDetails(
                        object = 'ServiceStatusDownDetails', 
                        reason = 'brokenIntegration', 
                        details = '', 
                        eta = '0123456789101112131415161718192021222324', ), ),
        )
        """

    def testCourtServiceStatus(self):
        """Test CourtServiceStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
