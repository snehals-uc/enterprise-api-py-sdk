# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.pacer_party_search_content import PACERPartySearchContent

class TestPACERPartySearchContent(unittest.TestCase):
    """PACERPartySearchContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PACERPartySearchContent:
        """Test PACERPartySearchContent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PACERPartySearchContent`
        """
        model = PACERPartySearchContent()
        if include_optional:
            return PACERPartySearchContent(
                object = 'PACERPartySearchContent',
                pcl_jurisdiction_type = 'Appellate',
                pcl_case_id = 56,
                pcl_case_number_full = '',
                pcl_case_title = '',
                pcl_case_office = '',
                pcl_case_number = 56,
                pcl_case_type = '',
                pcl_case_year = 56,
                pcl_court_id = '',
                pcl_date_filed = '',
                pcl_last_name = '',
                pcl_first_name = '',
                pcl_middle_name = '',
                pcl_generation = '',
                pcl_party_role = '',
                pcl_party_type = '',
                pcl_court_case = unicourt.models.pacer_case_search_content.PACERCaseSearchContent(
                    object = 'PACERCaseSearchContent', 
                    pcl_case_link = '', 
                    pcl_jurisdiction_type = 'Appellate', 
                    pcl_case_id = 56, 
                    pcl_case_number_full = '', 
                    pcl_case_title = '', 
                    pcl_case_office = '', 
                    pcl_case_number = 56, 
                    pcl_case_type = '', 
                    pcl_case_year = 56, 
                    pcl_court_id = '', 
                    pcl_date_filed = '', 
                    pcl_jpml_number = 56, 
                    pcl_mdl_court_id = '', 
                    pcl_mdl_date_ordered = '', 
                    pcl_mdl_date_received = '', 
                    pcl_mdl_extension = '', 
                    pcl_mdl_judge_last_name = '', 
                    pcl_mdl_littype = '', 
                    pcl_mdl_status = '', 
                    pcl_mdl_transferee = '', 
                    pcl_mdl_transferee_district = '', 
                    pcl_civil_cto_number = '', 
                    pcl_civil_date_disposition = '', 
                    pcl_civil_date_initiated = '', 
                    pcl_civil_date_terminated = '', 
                    pcl_civil_stat_disposition = '', 
                    pcl_civil_stat_initiated = '', 
                    pcl_civil_stat_terminated = '', 
                    pcl_civil_transferee = '', 
                    pcl_bankruptcy_chapter = '', 
                    pcl_date_discharged = '', 
                    pcl_date_dismissed = '', 
                    pcl_date_reopened = '', 
                    pcl_date_termed = '', 
                    pcl_disposition = '', 
                    pcl_disposition_method = '', 
                    pcl_joint_bankruptcy_flag = '', 
                    pcl_joint_discharged_date = '', 
                    pcl_joint_dismissed_date = '', 
                    pcl_joint_disposition_method = '', 
                    pcl_nature_of_suit = '', )
            )
        else:
            return PACERPartySearchContent(
                object = 'PACERPartySearchContent',
                pcl_jurisdiction_type = 'Appellate',
                pcl_case_id = 56,
                pcl_case_number_full = '',
                pcl_case_title = '',
                pcl_case_office = '',
                pcl_case_number = 56,
                pcl_case_type = '',
                pcl_case_year = 56,
                pcl_court_id = '',
                pcl_date_filed = '',
                pcl_last_name = '',
                pcl_first_name = '',
                pcl_middle_name = '',
                pcl_generation = '',
                pcl_party_role = '',
                pcl_party_type = '',
                pcl_court_case = unicourt.models.pacer_case_search_content.PACERCaseSearchContent(
                    object = 'PACERCaseSearchContent', 
                    pcl_case_link = '', 
                    pcl_jurisdiction_type = 'Appellate', 
                    pcl_case_id = 56, 
                    pcl_case_number_full = '', 
                    pcl_case_title = '', 
                    pcl_case_office = '', 
                    pcl_case_number = 56, 
                    pcl_case_type = '', 
                    pcl_case_year = 56, 
                    pcl_court_id = '', 
                    pcl_date_filed = '', 
                    pcl_jpml_number = 56, 
                    pcl_mdl_court_id = '', 
                    pcl_mdl_date_ordered = '', 
                    pcl_mdl_date_received = '', 
                    pcl_mdl_extension = '', 
                    pcl_mdl_judge_last_name = '', 
                    pcl_mdl_littype = '', 
                    pcl_mdl_status = '', 
                    pcl_mdl_transferee = '', 
                    pcl_mdl_transferee_district = '', 
                    pcl_civil_cto_number = '', 
                    pcl_civil_date_disposition = '', 
                    pcl_civil_date_initiated = '', 
                    pcl_civil_date_terminated = '', 
                    pcl_civil_stat_disposition = '', 
                    pcl_civil_stat_initiated = '', 
                    pcl_civil_stat_terminated = '', 
                    pcl_civil_transferee = '', 
                    pcl_bankruptcy_chapter = '', 
                    pcl_date_discharged = '', 
                    pcl_date_dismissed = '', 
                    pcl_date_reopened = '', 
                    pcl_date_termed = '', 
                    pcl_disposition = '', 
                    pcl_disposition_method = '', 
                    pcl_joint_bankruptcy_flag = '', 
                    pcl_joint_discharged_date = '', 
                    pcl_joint_dismissed_date = '', 
                    pcl_joint_disposition_method = '', 
                    pcl_nature_of_suit = '', ),
        )
        """

    def testPACERPartySearchContent(self):
        """Test PACERPartySearchContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
