# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/developers/enterpriseapi/api/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from unicourt.models.case_update_preview import CaseUpdatePreview

class TestCaseUpdatePreview(unittest.TestCase):
    """CaseUpdatePreview unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CaseUpdatePreview:
        """Test CaseUpdatePreview
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CaseUpdatePreview`
        """
        model = CaseUpdatePreview()
        if include_optional:
            return CaseUpdatePreview(
                object = 'CaseUpdatePreview',
                case_id = '01234567891011121314151617',
                status = 'COMPLETE',
                requested_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                case_api = '0',
                pacer_options = unicourt.models.case_update_pacer_options_response.CaseUpdatePacerOptionsResponse(
                    object = 'CaseUpdatePacerOptionsResponse', 
                    pacer_user_id = '012345', 
                    pacer_client_code = '', 
                    fetch_participants_if_older_than_days = 0, 
                    refresh_type = 'fetchNewDocketEntries', 
                    additional_page_array = [
                        unicourt.models.case_update_pacer_options_additional_page_array_inner.CaseUpdatePacerOptions_additionalPageArray_inner(
                            page = 'associatedCases', 
                            fetch_if_older_than_days = 0, )
                        ], ),
                exception = unicourt.models.exception.Exception(
                    object = 'Exception', 
                    code = '0', 
                    message = '0', 
                    details = '0', )
            )
        else:
            return CaseUpdatePreview(
                object = 'CaseUpdatePreview',
                case_id = '01234567891011121314151617',
                status = 'COMPLETE',
                requested_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                case_api = '0',
                pacer_options = unicourt.models.case_update_pacer_options_response.CaseUpdatePacerOptionsResponse(
                    object = 'CaseUpdatePacerOptionsResponse', 
                    pacer_user_id = '012345', 
                    pacer_client_code = '', 
                    fetch_participants_if_older_than_days = 0, 
                    refresh_type = 'fetchNewDocketEntries', 
                    additional_page_array = [
                        unicourt.models.case_update_pacer_options_additional_page_array_inner.CaseUpdatePacerOptions_additionalPageArray_inner(
                            page = 'associatedCases', 
                            fetch_if_older_than_days = 0, )
                        ], ),
                exception = unicourt.models.exception.Exception(
                    object = 'Exception', 
                    code = '0', 
                    message = '0', 
                    details = '0', ),
        )
        """

    def testCaseUpdatePreview(self):
        """Test CaseUpdatePreview"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
